services:
    mysql:
        container_name: ${PROJECT_NAME}_mysql
        restart: unless-stopped
        image: ${MYSQL_IMAGE}
        ports:
            - "${MYSQL_PORT}:3306"
        volumes:
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - symfony_app
#    postgres:
#        container_name: ${PROJECT_NAME}_postgres
#        restart: unless-stopped
#        image: postgres:14-alpine
#        ports:
#            - "5432:5432"
#        volumes:
#            - ~/apps/postgres:/var/lib/postgresql/data
#        environment:
#            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#            POSTGRES_USER: ${POSTGRES_USER}
#            POSTGRES_DB: ${POSTGRES_DB}
#        networks:
#            - symfony_app
    redis:
        image: ${REDIS_IMAGE}
        container_name: ${PROJECT_NAME}_redis
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - symfony_app
    php:
        container_name: ${PROJECT_NAME}_php
        restart: unless-stopped
        environment:
            XDEBUG_MODE: debug
            XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
        env_file:
            - .env
        build:
            context: ./php
            args:
                TIMEZONE: ${TIMEZONE}
                PHP_IMAGE: ${PHP_IMAGE}
        volumes:
            - ../backend/:/var/www/symfony:cached
            - .env:/var/www/symfony/.env
        networks:
            - symfony_app
    nginx:
        container_name: ${PROJECT_NAME}_nginx
        restart: unless-stopped
        build:
            context: ./nginx
            args:
                NGINX_IMAGE: ${NGINX_IMAGE}
        volumes:
            - ../backend/:/var/www/symfony
        ports:
            - "${NGINX_PORT}:80"
        networks:
            - symfony_app

networks:
    symfony_app:
        driver: bridge
